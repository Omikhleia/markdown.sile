\begin{document}
% Extra bonus
% Now let's try something very cool...
% - Quick and dirty definition of a new custom style...
%   (using some experimental "resilient" styling feature)
\define[command=customframe]{\center{\roughbox[bordercolor=#59b24c,
  fillcolor=220,padding=15pt, enlarge=true]{\parbox[width=90%lw, minimize=true]{\process}}}}
\lua{
SILE.scratch.styles.alignments["framed"] = "customframe"
local class = SILE.documentState.documentClass
class:registerStyle("FramedPara", {}, {
  paragraph = {
    before = { skip = "medskip" },
    after = { skip = "medskip" },
    align = "framed"
  }
})
}
% - Some other packages
%   (Here we could use what resilient book matters offer, but let's pretend we don't know about it)
\lua{
local class = SILE.documentState.documentClass
class:registerCommand("Ean13", function (_, content)
  local code = content[1]
  -- Markdown parser may interpret a dash between digits as smart typography for en-dash.
  -- Let's remove those.
  code = code:gsub("â€“","")
  SILE.call("ean13", { code = code })
end)
class:registerCommand("Initial", function (_, content)
  local letter = content[1]
  SILE.call("dropcap", { lines = 3, family = "Zallman Caps", join = true }, { letter })
end)
}
% - And let's process some inline Markdown using it...
\begin[type=markdown]{raw}
# Markdown Mark-up Marvels

[T]{ custom-style=Initial }he previous chapter, which stands in its own standalone Markdown file, serves
both as a documentation and a reference guide... Since it is intended to be
either processed from command-line or included in a very generic SILE document,
with the conversion based on the native `\autodoc:package{markdown}`{=sile} package,
it sticks to the bare minimum, by necessity and for the sake of simplicity.

Here in this bonus chapter, under this sensationalist headline, we'll go at bit further and showcase a few
more things, assuming additional class and package dependencies are available to us.

## Custom-style bragging

Custom styles are pretty neat, aren't they? Have a look at the nice capital above,
or to the fancy quote framing below...

::: {custom-style=FramedPara}
Thanks, gentle reader, for having read this document so far.
So, what _should_ we do now? It's maybe up to **you** now, to provide feedback
and help pushing all these components farther!
:::

And why not "style" an EAN-13 ISBN, so that it is rendered as a barcode... [978-2-9539896-6-3]{ custom-style=Ean13 }

## Advanced tables with pandocast

While the native package accepts supports "pipe tables" only, Pandoc supports the
standard "simple tables" and also extends Markdown with several other methods for declaring tables.
Would you have a document containing such tables, then `\autodoc:package{pandocast}`{=sile} should
be able to render them. Above, we just described that package briefly. It's now showcase time!

Obviously, it is mostly a question of input syntax, and the converter shouldn't actually have to bother,
since the hard work parsing these tables is done by Pandoc itself, generating a generic JSON AST
representation^[With a word of caution: Some Pandoc AST structures address advanced table features from
other document formats than Markdown. While such documents can be converted to a Pandoc JSON AST,
our package might not support them well. Its main focus is on Markdown parity with Pandoc.].

\end{raw}
\end{document}
